angular.module("extendsNgModel",[]);angular.module("extendsNgModel").directive("ngModelTimestamp",function(){return{require:"ngModel",restrict:"A",link:function(scope,element,attributes,ngModelCtrl){var toTimestamp=function(modelValue){return angular.isDefined(modelValue.getTime)?modelValue.getTime():modelValue};var fromTimestamp=function(viewValue){return angular.isNumber(viewValue)?new Date(viewValue):viewValue};ngModelCtrl.$formatters.push(fromTimestamp);ngModelCtrl.$parsers.push(toTimestamp)}}});angular.module("extendsNgModel").directive("ngModelCookie",function($cookies,ngModelStorage){var name="ngModelCookie",getValue=function(key){return function(){return $cookies.get(key)}},putValue=function(key,value){$cookies.put(key,value)},link=ngModelStorage(name,getValue,putValue);return{require:"ngModel",restrict:"A",link:link}});angular.module("extendsNgModel").constant("ngModelCacheId","ngModelCacheId").directive("ngModelCache",function($cacheFactory,ngModelStorage,ngModelCacheId){var name="ngModelCache",cache=$cacheFactory.get(ngModelCacheId)||$cacheFactory(ngModelCacheId),getValue=function(key){return function(){return cache.get(key)}},putValue=function(key,value){cache.put(key,value)},link=ngModelStorage(name,getValue,putValue);return{require:"ngModel",restrict:"A",link:link}});angular.module("extendsNgModel").factory("ngModelStorage",function($parse,ngModelConverter){var constructor=function(storageName,getValue,putValue){var link=function(scope,element,attributes,ngModelCtrl){var storageKey=attributes[storageName]||attributes.ngModel,storageValue=getValue(storageKey),oldNgModelValue,oldStorageValue;var updateStorageValue=function(ngModelValue){if(oldNgModelValue===ngModelValue){return}oldNgModelValue=ngModelValue;var updatedValue=ngModelConverter.toStorage(ngModelValue,attributes);putValue(storageKey,updatedValue);return ngModelValue};var updateModelValue=function(storageValue){if(oldStorageValue===storageValue){return}oldStorageValue=storageValue;var value=angular.isDefined(storageValue)?storageValue:ngModelCtrl.$modelValue,updatedValue=ngModelConverter.fromStorage(value,attributes);ngModelCtrl.$parsers.map(function(parser){updatedValue=parser(updatedValue)||updatedValue});$parse(attributes.ngModel).assign(scope,updatedValue)};ngModelCtrl.$parsers.push(updateStorageValue);scope.$watch(storageValue,updateModelValue)};return link};return constructor});angular.module("extendsNgModel").provider("ngModelConverter",function(){var customFromConverters=[],customToConverters=[],addConverter=function(customConverters){return function(match,convert){customConverters.push({match:match,convert:convert})}};this.pushFromStorageConverter=addConverter(customFromConverters);this.pushToStorageConverter=addConverter(customToConverters);this.$get=function($filter){var arrayOfString=function(arg){switch(true){case angular.isString(arg):return[arg];case angular.isArray(arg):return arg;default:return[]}},ifInputType=function(inputTypesToMatch){inputTypesToMatch=arrayOfString(inputTypesToMatch);return function(inputAttributes){var inputType=inputAttributes.type||"text";return inputTypesToMatch.indexOf(inputType.toLowerCase())!==-1}},hasAttribute=function(attributeNamesToMatch){attributeNamesToMatch=arrayOfString(attributeNamesToMatch);return function(inputAttributes){return attributeNamesToMatch.map(function(attributeName){return angular.isDefined(inputAttributes[attributeName])}).reduce(function(a,b){return a&&b})}},dateFilter=$filter("date"),dateInputs=["date","month","week","time","datetime-local"],defaultFromConverters=[{match:ifInputType("number"),convert:function(value){return parseFloat(value)}},{match:ifInputType("checkbox"),convert:function(value){return value===true||value==="true"}},{match:ifInputType(dateInputs)&&hasAttribute("ngModelTimestamp"),convert:function(value){return parseInt(value)}},{match:ifInputType(dateInputs),convert:function(value){return new Date(value)}}],defaultToConverters=[{match:ifInputType(dateInputs)&&hasAttribute("ngModelTimestamp"),convert:function(value){return value}},{match:ifInputType(dateInputs),convert:function(value){return dateFilter(value,"yyyy-MM-ddTHH:mm:ss")}}],convert=function(value,attributes,converters){for(i in converters){var converter=converters[i];if(converter.match(attributes)){return converter.convert(value)}}return value};return{fromStorage:function(value,attributes){return convert(value,attributes,customFromConverters.concat(defaultFromConverters))},toStorage:function(value,attributes){return convert(value,attributes,customToConverters.concat(defaultToConverters))}}}});angular.module("extendsNgModel").directive("ngModelLocation",function($location,ngModelStorage){var name="ngModelLocation",getValue=function(key){return function(){return $location.search()[key]}},putValue=function(key,value){$location.search(key,value)},link=ngModelStorage(name,getValue,putValue);return{require:"ngModel",restrict:"A",link:link}});
//# sourceMappingURL=dist/extends-ng-model.min.js.map