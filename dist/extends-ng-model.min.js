angular.module("extendsNgModel",[]);angular.module("extendsNgModel").constant("ngModelCacheId","ngModelCacheId").directive("ngModelCache",function($cacheFactory,ngModelStorage,ngModelCacheId){var name="ngModelCache",cache=$cacheFactory.get(ngModelCacheId)||$cacheFactory(ngModelCacheId),getValue=function(key){return function(){return cache.get(key)}},putValue=function(key,value){cache.put(key,value)},link=ngModelStorage(name,getValue,putValue);return{require:"ngModel",restrict:"A",link:link}});angular.module("extendsNgModel").provider("ngModelConverter",function(){var customFromConverter={},customToConverter={},addConverter=function(customConverter){return function(storageName,inputType,f){if(!(storageName in customConverter)){customConverter[storageName]={}}customConverter[storageName][inputType]=f}};this.addFromStorageConverter=addConverter(customFromConverter);this.addToStorageConverter=addConverter(customToConverter);this.$get=function($filter){var dateFilter=$filter("date"),defaultConverter={checkbox:function(value){return value===true||value==="true"},date:function(value){return dateFilter(value,"yyyy-MM-dd")},month:function(value){return dateFilter(value,"yyyy-MM")},week:function(value){return dateFilter(value,"yyyy-Www")},time:function(value){return dateFilter(value,"HH:mm:ss")},"datetime-local":function(value){return dateFilter(value,"yyyy-MM-ddTHH:mm:ss")}},convert=function(customConverter){return function(storageName,inputType,value){switch(true){case storageName in customConverter&&inputType in customConverter[storageName]:return customConverter[storageName][inputType](value);case inputType in defaultConverter:return defaultConverter[inputType](value);default:return value}}};return{fromStorage:convert(customFromConverter),toStorage:convert(customToConverter)}}});angular.module("extendsNgModel").directive("ngModelCookie",function($cookies,ngModelStorage){var name="ngModelCookie",getValue=function(key){return function(){return $cookies.get(key)}},putValue=function(key,value){$cookies.put(key,value)},link=ngModelStorage(name,getValue,putValue);return{require:"ngModel",restrict:"A",link:link}});angular.module("extendsNgModel").directive("ngModelLocation",function($location,ngModelStorage){var name="ngModelLocation",getValue=function(key){return function(){return $location.search()[key]}},putValue=function(key,value){$location.search(key,value)},link=ngModelStorage(name,getValue,putValue);return{require:"ngModel",restrict:"A",link:link}});angular.module("extendsNgModel").factory("ngModelStorage",function(ngModelConverter){var constructor=function(storageName,getValue,putValue){var link=function(scope,element,attributes,ngModelCtrl){var inputType=attributes.type||"text",storageKey=attributes[storageName]||attributes.ngModel,storageValue=getValue(storageKey);var updateStorageValue=function(ngModelValue){var updatedValue=ngModelConverter.toStorage(storageName,inputType,ngModelValue);putValue(storageKey,updatedValue);return ngModelValue};var updateModelValue=function(storageValue){var value=angular.isDefined(storageValue)?storageValue:ngModelCtrl.$modelValue,updatedValue=ngModelConverter.fromStorage(storageName,inputType,value);ngModelCtrl.$setViewValue(updatedValue,this);ngModelCtrl.$render()};ngModelCtrl.$parsers.push(updateStorageValue);scope.$watch(storageValue,updateModelValue)};return link};return constructor});
//# sourceMappingURL=dist/extends-ng-model.min.js.map